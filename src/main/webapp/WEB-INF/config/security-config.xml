<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/auth/denied" >
	
		<security:intercept-url pattern="/login" access="permitAll"/>
		<security:intercept-url pattern="/main" access="hasRole('ROLE_USER')"/>
		
		<!--JLF If login is right -->
		<security:form-login
				login-page="/login" 
				authentication-failure-url="/login?error"
				username-parameter="username"
			    password-parameter="password"
				default-target-url="/main"/>
			
		<!--JLF If login fails -->
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/login"
				delete-cookies="JSESSIONID" 
				logout-url="/auth/logout"/>
		
		<security:session-management session-authentication-error-url="/login">
        	<security:concurrency-control max-sessions="1" expired-url="/login"/>
		</security:session-management>
	
	</security:http>
	
	<!-- Select users and user_roles from database -->
	<security:authentication-manager>
	  <security:authentication-provider>
		<security:jdbc-user-service data-source-ref="bookfaceDS"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  "/>
	  </security:authentication-provider>
	</security:authentication-manager>
</beans>
