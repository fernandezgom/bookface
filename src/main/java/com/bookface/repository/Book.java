package com.bookface.repository;

// Generated 02-Mar-2015 16:57:19 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "book", catalog = "bookface")
public class Book implements java.io.Serializable {

	private Integer idBook;
	private Author author;
	private String name;
	private String synopsis;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Likes> likeses = new HashSet<Likes>(0);

	public Book() {
	}

	public Book(Author author, String name, String synopsis,
			Set<Comment> comments, Set<Likes> likeses) {
		this.author = author;
		this.name = name;
		this.synopsis = synopsis;
		this.comments = comments;
		this.likeses = likeses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_book", unique = true, nullable = false)
	public Integer getIdBook() {
		return this.idBook;
	}

	public void setIdBook(Integer idBook) {
		this.idBook = idBook;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_author")
	public Author getAuthor() {
		return this.author;
	}

	public void setAuthor(Author author) {
		this.author = author;
	}

	@Column(name = "name", length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "synopsis", length = 2000)
	public String getSynopsis() {
		return this.synopsis;
	}

	public void setSynopsis(String synopsis) {
		this.synopsis = synopsis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<Likes> getLikeses() {
		return this.likeses;
	}

	public void setLikeses(Set<Likes> likeses) {
		this.likeses = likeses;
	}

}
